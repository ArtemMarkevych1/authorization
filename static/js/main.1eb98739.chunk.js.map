{"version":3,"sources":["components/Car/Car.js","App.js","index.js"],"names":["Radium","props","inputClasses","name","push","length","className","style","border","boxShadow","cursor","year","type","onChange","onChangeName","value","join","onClick","onDelete","App","state","cars","pageTitle","showCars","toggleCarsHandler","setState","handleClick","newTitle","divStyle","textAlign","index","car","this","concat","splice","map","key","event","target","deleteHandler","bind","color","fontSize","width","margin","paddingTop","Component","ReactDOM","render","document","getElementById"],"mappings":"4UA4CeA,eAxCH,SAAAC,GACV,IAAMC,EAAe,CAAC,SACH,KAAfD,EAAME,KACRD,EAAaE,KAAK,SAElBF,EAAaE,KAAK,OAGhBH,EAAME,KAAKE,OAAS,GACtBH,EAAaE,KAAK,QAYpB,OACE,yBAAKE,UAAU,MAAMC,MAXT,CACZC,OAAQ,iBACRC,UAAW,+BACX,SAAU,CACRD,OAAQ,iBACRC,UAAW,+BACXC,OAAQ,aAMR,yCAAeT,EAAME,MACrB,oCACQ,gCAASF,EAAMU,OAEvB,2BACEC,KAAK,OACLC,SAAUZ,EAAMa,aAChBC,MAAOd,EAAME,KACbG,UAAWJ,EAAac,KAAK,OAE/B,6BACA,6BACA,4BAAQC,QAAShB,EAAMiB,UAAvB,cC6DSC,E,2MA/FbC,MAAQ,CACNC,KAAM,CACJ,CAAElB,KAAM,SAAUQ,KAAM,MACxB,CAAER,KAAM,QAASQ,KAAM,MACvB,CAAER,KAAM,MAAOQ,KAAM,OAEvBW,UAAW,YACXC,UAAU,G,EAGZC,kBAAoB,WAClB,EAAKC,SAAS,CACZF,UAAW,EAAKH,MAAMG,Y,EAI1BG,YAAc,SAAAC,GACZ,EAAKF,SAAS,CACZH,UAAWK,K,EAIfC,SAAW,CACTC,UAAW,U,4EAGA1B,EAAM2B,GACjB,IAAMC,EAAMC,KAAKZ,MAAMC,KAAKS,GAC5BC,EAAI5B,KAAOA,EACX,IAAMkB,EAAI,YAAOW,KAAKZ,MAAMC,MAC5BA,EAAKS,GAASC,EACdC,KAAKP,SAAS,CACZJ,KAAMA,M,oCAIIS,GACZ,IAAMT,EAAOW,KAAKZ,MAAMC,KAAKY,SAC7BZ,EAAKa,OAAOJ,EAAO,GACnBE,KAAKP,SAAS,CAAEJ,W,+BAGR,IAAD,OACHA,EAAO,KAgBX,OAdIW,KAAKZ,MAAMG,WACbF,EAAOW,KAAKZ,MAAMC,KAAKc,KAAI,SAACJ,EAAKD,GAC/B,OACE,kBAAC,EAAD,CACEM,IAAKN,EACL3B,KAAM4B,EAAI5B,KACVQ,KAAMoB,EAAIpB,KACVG,aAAc,SAAAuB,GAAK,OAAI,EAAKvB,aAAauB,EAAMC,OAAOvB,MAAOe,IAC7DZ,SAAU,EAAKqB,cAAcC,KAAK,EAAMV,SAO9C,yBAAKvB,MAAOyB,KAAKJ,UACf,wBAAIrB,MAAO,CAAEkC,MAAO,MAAOC,SAAU,SAClCV,KAAKZ,MAAME,WAEd,4BAAQL,QAASe,KAAKR,mBAAtB,eACA,6BAgBA,yBACEjB,MAAO,CACLoC,MAAO,IACPC,OAAQ,OACRC,WAAY,SAGbxB,Q,GAzFOyB,aCElBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1eb98739.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Car.css\";\r\nimport Radium from \"radium\";\r\n\r\nconst Car = props => {\r\n  const inputClasses = [\"input\"];\r\n  if (props.name !== \"\") {\r\n    inputClasses.push(\"green\");\r\n  } else {\r\n    inputClasses.push(\"red\");\r\n  }\r\n\r\n  if (props.name.length > 4) {\r\n    inputClasses.push(\"bold\");\r\n  }\r\n  const style = {\r\n    border: \"1px solid #ccc\",\r\n    boxShadow: \"0 4px 5px 0 rgba(0,0,0, .14)\",\r\n    \":hover\": {\r\n      border: \"1px solid #aaa\",\r\n      boxShadow: \"0 4px 15px 0 rgba(0,0,0,.25)\",\r\n      cursor: \"pointer\"\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Car\" style={style}>\r\n      <h3>Car name: {props.name}</h3>\r\n      <p>\r\n        Year: <strong>{props.year}</strong>\r\n      </p>\r\n      <input\r\n        type=\"text\"\r\n        onChange={props.onChangeName}\r\n        value={props.name}\r\n        className={inputClasses.join(\" \")}\r\n      ></input>\r\n      <br />\r\n      <br />\r\n      <button onClick={props.onDelete}>Delete</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Radium(Car);\r\n\r\n// export default props => (\r\n//   <div>\r\n//     <h3>Car name: {props.name}</h3>\r\n//     <p>\r\n//       Number: <strong>{props.year}</strong>\r\n//     </p>\r\n//     <button onClick={props.onChangeTitle}>Click</button>\r\n//   </div>\r\n// );\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Car from \"./components/Car/Car\";\n\nclass App extends Component {\n  state = {\n    cars: [\n      { name: \"Toyota\", year: 2018 },\n      { name: \"Mazda\", year: 2017 },\n      { name: \"BMW\", year: 2016 }\n    ],\n    pageTitle: \"Cars list\", // any custom value via string\n    showCars: false\n  };\n\n  toggleCarsHandler = () => {\n    this.setState({\n      showCars: !this.state.showCars\n    });\n  };\n\n  handleClick = newTitle => {\n    this.setState({\n      pageTitle: newTitle // переназначаем pageTitle\n    });\n  };\n\n  divStyle = {\n    textAlign: \"center\"\n  };\n\n  onChangeName(name, index) {\n    const car = this.state.cars[index];\n    car.name = name;\n    const cars = [...this.state.cars];\n    cars[index] = car;\n    this.setState({\n      cars: cars\n    });\n  }\n\n  deleteHandler(index) {\n    const cars = this.state.cars.concat();\n    cars.splice(index, 1);\n    this.setState({ cars });\n  }\n\n  render() {\n    let cars = null;\n\n    if (this.state.showCars) {\n      cars = this.state.cars.map((car, index) => {\n        return (\n          <Car\n            key={index}\n            name={car.name}\n            year={car.year}\n            onChangeName={event => this.onChangeName(event.target.value, index)}\n            onDelete={this.deleteHandler.bind(this, index)}\n          />\n        );\n      });\n    }\n\n    return (\n      <div style={this.divStyle}>\n        <h1 style={{ color: \"red\", fontSize: \"45px\" }}>\n          {this.state.pageTitle}\n        </h1>\n        <button onClick={this.toggleCarsHandler}>Toggle cars</button>\n        <br />\n        {/* <button onClick={this.handleClick.bind(this, \"Title is changed\")}>\n          Change Title\n        </button> */}\n        {/* {this.state.showCars\n          ? this.state.cars.map((car, index) => {\n              return (\n                <Car\n                  key={index}\n                  name={car.name}\n                  year={car.year}\n                  onChangeTitle={() => this.handleClick(car.name)}\n                />\n              );\n            })\n          : null} */}\n        <div\n          style={{\n            width: 400,\n            margin: \"auto\",\n            paddingTop: \"20px\"\n          }}\n        >\n          {cars}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}